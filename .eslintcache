[{"C:\\Users\\Lilo\\Desktop\\React Projects\\square-factory\\src\\index.js":"1","C:\\Users\\Lilo\\Desktop\\React Projects\\square-factory\\src\\App.jsx":"2","C:\\Users\\Lilo\\Desktop\\React Projects\\square-factory\\src\\components\\InputSection.jsx":"3","C:\\Users\\Lilo\\Desktop\\React Projects\\square-factory\\src\\components\\GlobalStyles.jsx":"4","C:\\Users\\Lilo\\Desktop\\React Projects\\square-factory\\src\\components\\Square.jsx":"5","C:\\Users\\Lilo\\Desktop\\React Projects\\square-factory\\src\\components\\SquareBoard.jsx":"6"},{"size":196,"mtime":1611577539728,"results":"7","hashOfConfig":"8"},{"size":977,"mtime":1611604224033,"results":"9","hashOfConfig":"8"},{"size":2029,"mtime":1611605861688,"results":"10","hashOfConfig":"8"},{"size":208,"mtime":1611578650823,"results":"11","hashOfConfig":"8"},{"size":2995,"mtime":1611605366981,"results":"12","hashOfConfig":"8"},{"size":1259,"mtime":1611605640457,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"19jtpmy",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Lilo\\Desktop\\React Projects\\square-factory\\src\\index.js",[],["28","29"],"C:\\Users\\Lilo\\Desktop\\React Projects\\square-factory\\src\\App.jsx",[],"C:\\Users\\Lilo\\Desktop\\React Projects\\square-factory\\src\\components\\InputSection.jsx",[],"C:\\Users\\Lilo\\Desktop\\React Projects\\square-factory\\src\\components\\GlobalStyles.jsx",[],"C:\\Users\\Lilo\\Desktop\\React Projects\\square-factory\\src\\components\\Square.jsx",["30"],"import React, { useState, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport styled from 'styled-components';\r\n\r\nconst Square = ({ squareNum, squares, setSquares, color, checkerNum, setChangerIsHidden, changerVal, setAlert30, id }) => {\r\n\r\n  const [squareColor, setSquareColor] = useState(color);\r\n\r\n  useEffect(() => {\r\n    if (checkerNum === '' || isNaN(checkerNum)) {\r\n      setSquareColor(color);\r\n    } else if (parseInt(squareNum) > checkerNum) {\r\n      setSquareColor('green');\r\n    } else if (parseInt(squareNum) < checkerNum) {\r\n      setSquareColor('red');\r\n    }\r\n  }, [squareNum, color, checkerNum])\r\n\r\n  useEffect(() => {\r\n\r\n    if (changerVal !== \"\" && changerVal !== undefined) {\r\n      const newSquares = squares.map((square) => {\r\n\r\n        if (square.color === 'orange') {\r\n          const previousNum = parseInt(square.squareNum);\r\n          const changedNum = parseInt(changerVal);\r\n          if (changedNum - previousNum >= 30) {\r\n            setAlert30(true);\r\n          }\r\n\r\n          return {\r\n            ...square,\r\n            squareNum: changerVal,\r\n          }\r\n        } else {\r\n          return {\r\n            ...square,\r\n          }\r\n        }\r\n      })\r\n      setSquares(newSquares);\r\n\r\n    }\r\n  }, [changerVal])\r\n\r\n  const handleDeleteButton = () => {\r\n    const newSquares = squares.filter((item) => item.id !== id)\r\n    setSquares(newSquares);\r\n\r\n    if (newSquares.some(square => square.color === 'orange'))\r\n      setChangerIsHidden(false);\r\n    else setChangerIsHidden(true);\r\n  }\r\n\r\n  const handleSquareClick = () => {\r\n    //active 'orange' state\r\n    const newSquares = squares.map((square) => {\r\n      if (square.id === id) {\r\n        if (square.color === 'orange') {\r\n          setChangerIsHidden(true)\r\n          return {\r\n            ...square,\r\n            color: '#BBACBF',\r\n          }\r\n        }\r\n        else {\r\n          setChangerIsHidden(false)\r\n          return {\r\n            ...square,\r\n            color: 'orange',\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        return {\r\n          ...square,\r\n          color: '#BBACBF',\r\n        }\r\n      }\r\n    })\r\n\r\n    setSquares(newSquares);\r\n\r\n    // if (squareColor !== 'orange') {\r\n    //   setSquareColor('orange');\r\n    //   setChangerIsHidden(false)\r\n    // }\r\n    // else {\r\n    //   setSquareColor('#BBACBF');\r\n    //   setChangerIsHidden(true);\r\n    // }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <StyledButton onClick={() => handleDeleteButton()}>Delete</StyledButton>\r\n      <StyledSquare onClick={() => handleSquareClick()} squareColor={squareColor}>\r\n        {squareNum}\r\n      </StyledSquare>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst StyledSquare = styled(motion.div)`\r\n  height: 100px;\r\n  width: 100px;\r\n  background: ${props => props.squareColor};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 1rem;\r\n  margin: 0.5rem;\r\n  font-size: 2.5rem;\r\n`;\r\n\r\nconst StyledButton = styled(motion.button)`\r\n\r\n`;\r\n\r\nexport default Square;","C:\\Users\\Lilo\\Desktop\\React Projects\\square-factory\\src\\components\\SquareBoard.jsx",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":43,"column":6,"nodeType":"37","endLine":43,"endColumn":18,"suggestions":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setSquares' and 'squares'. Either include them or remove the dependency array. If 'setSquares' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["41"],"no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},"Update the dependencies array to be: [changerVal, setSquares, squares]",{"range":"44","text":"45"},[1322,1334],"[changerVal, setSquares, squares]"]